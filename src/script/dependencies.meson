# SPDX-FileCopyrightText: Stone Tickle <lattis@mochiro.moe>
# SPDX-License-Identifier: GPL-3.0-only

func get_clike_compiler(dep_name str, machine str:) -> compiler
    proj = meson.project()
    foreach comp : ['c', 'cpp']
        if comp in proj['toolchains'][machine]
            return proj['toolchains'][machine][comp]
        endif
    endforeach

    error(f'@dep_name@ requires a c or cpp compiler')
endfunc

func intl(required bool:, static bool:, machine str:) -> dep
    cc = get_clike_compiler('intl', machine: machine)
    code = '#include <libintl.h>\n\nint main() {\n    gettext("Hello world");\n}'

    if cc.links(code)
        dep = declare_dependency()
    else
        dep = cc.find_library(
            'intl',
            has_headers: ['libintl.h'],
            required: required,
            static: static,
        )
    endif

    return dep
endfunc

func iconv(required bool:, static bool:, machine str:) -> dep
    cc = get_clike_compiler('iconv', machine: machine)
    code = '#include <iconv.h>\n\nint main() {\n    iconv_open("","");\n}'

    if cc.links(code)
        dep = declare_dependency()
    else
        dep = cc.find_library(
            'iconv',
            has_headers: ['iconv.h'],
            required: required,
            static: static,
        )
    endif

    return dep
endfunc

meson.register_dependency_handler('intl', intl)
meson.register_dependency_handler('iconv', iconv)
